# -*- coding: utf-8 -*-
"""Keras ile k覺yafet resimlerini s覺n覺fland覺rma

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tBCF3cZQVPAhLYm_lOY6i0xgziwgwaHM
"""

import tensorflow as tf

fashion_mnist = tf.keras.datasets.fashion_mnist.load_data()

(X_train_full , y_train_full) , (X_test , y_test) = fashion_mnist

X_train , y_train = X_train_full[:-5000] , y_train_full[:-5000]

X_valid , y_valid = X_train_full[-5000 : ] , y_train_full[-5000 : ]

X_train.shape

X_train.dtype

X_train , X_valid , X_test = X_train/255. , X_valid/255. , X_test/255.

class_names = ["T-shirt/top" , "Trouser" , "Pullover" , "Dress" , "Coat" , "Sandal",
               "Shirt" , "Sneaker" , "Bag" , "Ankle boot"]

class_names [y_train[0]]

#MODEL KURMA

tf.random.set_seed(42)

model = tf.keras.Sequential()

model.add(tf.keras.layers.Input(shape=[28,28]))

model.add(tf.keras.layers.Flatten())

model.add(tf.keras.layers.Dense(300 , activation="relu"))

model.add(tf.keras.layers.Dense(100,activation="relu"))

model.add(tf.keras.layers.Dense(10,activation="softmax"))

model=tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=[28,28]),
    tf.keras.layers.Dense(300 , activation="relu"),
    tf.keras.layers.Dense(100 , activation="relu"),
    tf.keras.layers.Dense(10 , activation="softmax")
])

model.summary()

model.layers

hidden1=model.layers[1]

weight , biases = hidden1.get_weights()

weight

biases

model.compile(
    loss="sparse_categorical_crossentropy",
    optimizer="sgd",
    metrics=["accuracy"]
)

history = model.fit(X_train , y_train , epochs=30 , validation_data=(X_valid , y_valid))

import matplotlib.pyplot as plt
import pandas as pd
pd.DataFrame(history.history).plot(figsize=(8,5),
                              xlim=[0,29],
                              ylim=[0,1],
                              grid=True,
                              xlabel="Epoch",
                              style=["r--" , "r--." , "b-" , "b-*"])
plt.show()

model.evaluate(X_test , y_test)

X_new = X_test[:3]

y_proba = model.predict(X_new)

y_proba.round(2)

